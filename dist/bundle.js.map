{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA,IAAIA,KAAK,GAAGC,UAAU,CAAEC,YAAY,EAACC,OAAO,CAAE,OAAO,CAAC,CAAC,IAAI,EAAE;;AAE7D;AACO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,IAAI,EAAK;EAC7B,IAAMC,OAAO,GAAG;IACZC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAE,CAAC;IACfC,IAAI,EAAEL,IAAI;IACVM,SAAS,EAAE;EACf,CAAC;EACDX,KAAK,CAACY,IAAI,CAAEN,OAAO,CAAC;EACpBJ,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEC,KAAK,CAACC,SAAS,CAAEf,KAAK,CAAC,CAAC;AAC1D,CAAC;;AAED;AACO,IAAMgB,QAAQ,GAAG,SAAXA,QAAQA,CAAA;EAAA,OAAShB,KAAK;AAAA;;;;;;;;;;;;;;;ACfD;AAE3B,IAAMiB,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EAC7B,IAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC;EACtDF,SAAS,CAACG,SAAS,GAAG,EAAE;EAExB,IAAMrB,KAAK,GAAGgB,+CAAQ,CAAE,CAAC;EACzBhB,KAAK,CAACsB,OAAO,CAAE,UAACjB,IAAI,EAAK;IACrB,IAAMkB,EAAE,GAAGJ,QAAQ,CAACK,aAAa,CAAE,IAAI,CAAC;IACxCD,EAAE,CAACE,YAAY,CAAC,SAAS,EAAEpB,IAAI,CAACE,EAAE,CAAC;;IAEnC;IACA,IAAIF,IAAI,CAACM,SAAS,KAAK,IAAI,EAAE;MACzBY,EAAE,CAACG,SAAS,CAACC,GAAG,CAAE,WAAW,CAAC;IAClC;IAEAJ,EAAE,CAACF,SAAS,oBAAAO,MAAA,CACPvB,IAAI,CAACK,IAAI,qGAAAkB,MAAA,CAEevB,IAAI,CAACM,SAAS,KAAK,KAAK,GAAG,WAAW,GAAG,UAAU,yBAC/E;IAEDO,SAAS,CAACW,WAAW,CAAEN,EAAE,CAAC;EAC9B,CAAC,CAAC;AACN,CAAC;;;;;;UCxBD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNmC;AACF;AAEjCJ,QAAQ,CAACW,gBAAgB,CAAE,kBAAkB,EAAE,YAAM;EACjD;EACAb,gDAAW,CAAC,CAAC;;EAEb;EACAE,QAAQ,CAACC,cAAc,CAAE,WAAW,CAAC,CAACU,gBAAgB,CAAE,QAAQ,EAAE,UAACC,CAAC,EAAK;IACtEA,CAAC,CAACC,cAAc,CAAE,CAAC;IACnB,IAAMC,SAAS,GAAGd,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACvD,IAAGa,SAAS,CAACC,KAAK,KAAK,EAAE,EAAE;MACvB;MACA9B,8CAAO,CAAC6B,SAAS,CAACC,KAAK,CAAC;;MAExB;MACAjB,gDAAW,CAAE,CAAC;;MAEd;MACAE,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACc,KAAK,GAAE,EAAE;IACnD;EACH,CAAC,CAAC;AAEN,CAAC,CAAC,C","sources":["webpack://gestortareas/./src/task.js","webpack://gestortareas/./src/ui.js","webpack://gestortareas/webpack/bootstrap","webpack://gestortareas/webpack/runtime/define property getters","webpack://gestortareas/webpack/runtime/hasOwnProperty shorthand","webpack://gestortareas/webpack/runtime/make namespace object","webpack://gestortareas/./src/index.js"],"sourcesContent":["// Lista de tareas \r\nlet tasks = JASONparse (localStorage,getItem ('tasks')) || [];\r\n\r\n// Función para agrgar tareas\r\nexport const addTask = (task) => {\r\n    const newTask = {\r\n        id: Date.now (),\r\n        text: task,\r\n        completed: false\r\n    };\r\n    tasks.push (newTask);\r\n    localStorage.setItem('tasks', JASON.stringify (tasks));\r\n}\r\n\r\n// Función para poder traer la lista de tareas\r\nexport const getTasks = () => tasks;\r\n","import { getTasks } from './task';\r\n\r\nexport const renderTasks = () => {\r\n    const tanskList = document.getElementById(\"task-list\");\r\n    tanskList.innerHTML = \"\";\r\n\r\n    const tasks = getTasks ();\r\n    tasks.forEach ((task) => {\r\n        const li = document.createElement (\"li\");\r\n        li.setAttribute(\"data-id\", task.id);\r\n\r\n        // Añadir clase solo si la tarea está completada //\r\n        if (task.completed === true) {\r\n            li.classList.add (\"completed\");\r\n        }\r\n\r\n        li.innerHTML = `;\r\n           ${task.text}\r\n           <button class=\"delete\"> Eliminar </button>\r\n           <button class=\"toggle\">${ task.completed === false ? \"Completar\" : \"Deshacer\"} </button>\r\n        `;   \r\n        \r\n        tanskList.appendChild (li);\r\n    });\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { renderTasks } from \"./ui\";\r\nimport { addTask } from \"./task\";\r\n\r\ndocument.addEventListener (\"DOMContentLoaded\", () => {\r\n    // Hacemos visible la lista de tareas\r\n    renderTasks();\r\n\r\n    // Agregar el evento para la función para agregar tarea\r\n    document.getElementById (\"task-form\").addEventListener (\"submit\", (e) => {\r\n       e.preventDefault ();\r\n       const taskInput = document.getElementById(\"task-input\");\r\n       if(taskInput.value !== \"\") {\r\n           //Agregamos la tarea \r\n           addTask(taskInput.value);\r\n\r\n           //Volvemos a cargar la lista de tareas\r\n           renderTasks ();\r\n\r\n           // Limpiar el input\r\n           document.getElementById(\"task-input\").value =\"\";   \r\n       }\r\n    });\r\n\r\n});"],"names":["tasks","JASONparse","localStorage","getItem","addTask","task","newTask","id","Date","now","text","completed","push","setItem","JASON","stringify","getTasks","renderTasks","tanskList","document","getElementById","innerHTML","forEach","li","createElement","setAttribute","classList","add","concat","appendChild","addEventListener","e","preventDefault","taskInput","value"],"sourceRoot":""}